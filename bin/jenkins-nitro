#!/usr/bin/env ruby

$LOAD_PATH.unshift(File.join(File.dirname(__FILE__), '..', 'lib'))
require 'jenkins_nitro/jenkins_nitro'
require 'jenkins_nitro/options'

options = JenkinsNitro::CLI::Options.new(ARGV)
if options.empty?
  options.print_help
  exit
end

diffs = JenkinsNitro.compare(options.fast_build, options.slow_build)

unless diffs
  puts "No diff. Do you even commit, bro?"
  exit
end


SLOWDOWN_FLAG   = '✖'
SPEEDUP_FLAG    = '✓'
REMOVED_FLAG    = '-'
NEW_ENTRY_FLAG  = '+'

def colorize(line, color)
  "\e[#{color}m#{line}\e[0m"
end

COLORS          = {
  SLOWDOWN_FLAG   => '1;31',
  SPEEDUP_FLAG    => '1;32',
  REMOVED_FLAG    => '0;32',
  NEW_ENTRY_FLAG  => '0;31',
}

flags_header = "#{SLOWDOWN_FLAG} slowdown, #{SPEEDUP_FLAG} speedup, " +
               "#{NEW_ENTRY_FLAG} new entry, #{REMOVED_FLAG} removed"
puts "  Slowdown     Duration     #{flags_header}                                 "
puts "============ ============ =================================================="

top_entries = [options.top_entries, diffs.size].min
diffs.keys[0...top_entries].each do |name|
  diff = diffs[name]

  flag = SPEEDUP_FLAG
  flag = SLOWDOWN_FLAG if diff.slowdown?
  flag = REMOVED_FLAG if diff.removed?
  flag = NEW_ENTRY_FLAG if diff.new_entry?

  slowdown  = sprintf('%10.4f s', diff.duration_diff) unless diff.removed? || diff.new_entry?
  duration  = sprintf('%10.4f s', diff.duration) unless diff.removed?

  line  = sprintf("%12s %12s   %s %s", slowdown, duration, flag, name)
  color = COLORS[flag]
  puts colorize(line, color)
end

total_diff        = diffs.values[0...top_entries].map(&:duration_diff).reduce(:+).round(4)
diff_orientation  = total_diff > 0 ? 'slowdown' : 'speedup'
formatted_diff    = sprintf("%10.4f s", total_diff)

puts
puts "Total #{diff_orientation} from top #{top_entries} changes"
puts "============"
puts colorize(formatted_diff, total_diff > 0 ? COLORS[SLOWDOWN_FLAG] : COLORS[SPEEDUP_FLAG])

exit 1 if total_diff > 0
